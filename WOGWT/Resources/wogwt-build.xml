<project name="gwtbuild" basedir=".">

	<path id="empty.path" />
		
	<macrodef name="gwtCompile">
		<!-- the module to compile -->
		<attribute name="module" />
		<!-- if your module specifies the rename-to attribute, the value of it -->
		<attribute name="renamedTo" default="@{module}" />
		<!-- the root of your source tree, usually "src" -->
		<attribute name="srcDir" default="Sources"/>
		<!-- possible values are: ERROR, WARN, INFO, TRACE, DEBUG, SPAM, or ALL -->
		<attribute name="logLevel" default="INFO"/>
		<!-- The directory into which generated files will be written for review -->
		<attribute name="genDir" default="gen" />
		<!-- The directory to write output files into -->
		<attribute name="outputDir" default="WebServerResources"/>
		<!-- Logs output in a graphical tree view  -->
		<attribute name="useTreeLogger" default="false"/>
		<!-- possible style values are: OBFUSCATED, PRETTY, and DETAILED -->
		<attribute name="style" default="OBFUSCATED"/>
		<attribute name="strict" default="false"/>
		<!-- Debugging: causes the compiled output to check assert statements -->
		<attribute name="enableAssert" default="false"/>
		<!-- Validate all source code, but do not compile -->
		<attribute name="validateOnly" default="false"/>
		<!-- Validate all source code, but do not compile -->
		<attribute name="disableClassMetadata" default="false"/>
		<!-- Validate all source code, but do not compile -->
		<attribute name="disableCastChecking" default="false"/>
		<!-- Validate all source code, but do not compile -->
		<attribute name="compileReport" default="false"/>
		<!-- Faster compile for testing/debugging purposes -->
		<attribute name="draftCompile" default="false"/>
		<!-- build even if not deemed necessary by file timestamps -->
		<attribute name="forceBuild" default="false"/>
		<!-- classpath element id for adding third-party jars to the compiler classpath -->
		<attribute name="classpathRefid" default="empty.path"/>
		<attribute name="gwtHome" default="/Library/Frameworks/WOGWT.framework/Resources/Java" />

		<sequential>
			<gwt-uptodate property="gwtGenerate.notRequired" 
				module="@{renamedTo}" 
				srcdir="@{srcDir}"
				output="@{outputDir}"
				gwthome="@{gwtHome}"/>
			
			<condition property="genDirArg" value="-gen" else="">
				<length string="@{genDir}" when="greater" length="0" />
			</condition>
				
			<condition property="treeLogger" value="-treeLogger" else="">
				<istrue value="@{useTreeLogger}"/>
			</condition>
			
			<condition property="strictArg" value="-strict" else=" ">
				<istrue value="@{strict}"/>
			</condition>
			
			<condition property="assertArg" value="-ea" else=" ">
				<istrue value="@{enableAssert}"/>
			</condition>
				
			<condition property="validateOnlyArg" value="-validateOnly" else="">
				<istrue value="@{validateOnly}"/>
			</condition>
			
			<condition property="draftCompileArg" value="-draftCompile" else="">
				<istrue value="@{draftCompile}"/>
			</condition>
			
			<condition property="disableClassMetadataArg" value="-XdisableClassMetadata" else="">
				<istrue value="@{disableClassMetadata}"/>
			</condition>
			
			<condition property="disableCastCheckingArg" value="-XdisableCastChecking" else="">
				<istrue value="@{disableCastChecking}"/>
			</condition>
			
			<condition property="compileReportArg" value="-compileReport" else="">
				<istrue value="@{compileReport}"/>
			</condition>
			
			<java classname="com.google.gwt.dev.Compiler" fork="true">
				<classpath refid="@{classpathRefid}" />
				<classpath>
					<pathelement location="@{srcDir}" />
				  
					<pathelement path="@{gwthome}/gwt-user.jar" />
					<pathelement path="@{gwthome}/gwt-elemental.jar" />
					<pathelement path="@{gwthome}/requestfactory-apt.jar" />
					<pathelement path="@{gwthome}/requestfactory-client+src.jar" />
					<pathelement path="@{gwthome}/validation-api-1.0.0.GA.jar" />
					<pathelement path="@{gwthome}/validation-api-1.0.0.GA-sources.jar" />
					<pathelement path="@{gwthome}/gwt-dev.jar" />
					<pathelement path="@{gwthome}/gwt-soyc-vis.jar" />
					<pathelement path="@{gwthome}/gwt-codeserver.jar" />
					<pathelement path="@{gwthome}/gwt-api-checker.jar" />
					
					<pathelement path="@{gwthome}/gwt-incubator.jar" />
					<pathelement path="@{gwthome}/wogwt.jar" />
					<pathelement path="@{gwthome}/wogwt-emulation.jar" />
				</classpath>
				
				<sysproperty key="java.awt.headless" value="true"/>
				<jvmarg line="-XstartOnFirstThread" />
				<jvmarg line="-Xms256m -Xmx1024m" />
				<jvmarg line="-XX:+AggressiveOpts" />
				<jvmarg line="-XX:ThreadPriorityPolicy=1" />
				<jvmarg line="-Xverify:none" />
				
			
				<arg value="-logLevel" />
				<arg value="@{logLevel}" />
				
				<arg line="${genDirArg}" />
				<arg line="@{genDir}" />

				<arg value="-style" />
				<arg value="@{style}" />
				
				<arg line="${strictArg}" />
				<arg line="${assertArg}" />
				<arg line="${disableClassMetadataArg}" />
				<arg line="${disableCastCheckingArg}" />
				<arg line="${validateOnlyArg}" />
				<arg line="${draftCompileArg}" />
				<arg line="${compileReportArg}" />
				
				<arg value="-localWorkers" />
				<arg value="2" />
				
				<arg value="-war" />
				<arg value="@{outputDir}" />
				
				<arg value="@{module}" />
			</java>
		</sequential>
	</macrodef>

	<!-- this defines a macro task 'gwt-uptodate' -->
	<macrodef name="gwt-uptodate"
		description="sets a property indicating if the module is up to date">
		<attribute name="property" />
		<attribute name="module" />
		<attribute name="srcdir" default="Sources"/>
		<attribute name="output" default="WebServerResources"/>
		<attribute name="gwthome" default="/Library/Frameworks/WOGWT.framework/Resources/Java" />
		<sequential>

			<path id="module.package" path="@{srcdir}/@{module}"/>

			<pathconvert property="module.path" refid="module.package">
				<chainedmapper>  
					<filtermapper>
						<replaceregex pattern="\.\p{Upper}.*$"/>
					</filtermapper> 
					<unpackagemapper from="*" to="*"/>
				</chainedmapper>  
			</pathconvert>

			<!-- the module is uptodate if the .nocache.html is not older than any of the module src files -->
			<uptodate property="@{property}"
				targetfile="@{output}/@{module}/@{module}.nocache.js">
				<srcfiles dir="${module.path}" includes="**/*.*" />
			</uptodate>
		</sequential>
	</macrodef>
	
</project>
